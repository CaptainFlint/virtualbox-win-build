diff --git a/Config.kmk b/Config.kmk
index 40349400a8..b7cfde5e71 100644
--- a/Config.kmk
+++ b/Config.kmk
@@ -3707,6 +3707,12 @@ if defined(VBOX_SIGNING_MODE) && "$(KBUILD_TARGET)" == "win"
 	$(evalcall VBOX_RE_SIGN_DLL_INTERNAL_FN,$1,$2,$3)\
 	,)$($(1)_0_OUTDIR)/$(3)$(notdir $2)
 
+if defined(VBOX_SIGNING_MODE) && defined(VBOX_CROSS_CERTIFICATE_FILE)
+	VBOX_INTEGRITY_CHECK := /IntegrityCheck
+else
+	VBOX_INTEGRITY_CHECK := /IntegrityCheck:NO
+endif
+
 define VBOX_RE_SIGN_DLL_INTERNAL_FN
 local n = $(3)$(notdir $2)
 ifndef $(1)_VBOX_RE_SIGNED_$(n)
@@ -3717,7 +3723,7 @@ ifndef $(1)_VBOX_RE_SIGNED_$(n)
 	$(call MSG_TOOL,SIGNTOOL,,$<,$@)
 	$(RM) -f -- "$@"
 	$(CP) -- "$<" "$@"
-	$(VBOX_VCC_EDITBIN) /LargeAddressAware /DynamicBase /NxCompat /Release /IntegrityCheck \
+	$(VBOX_VCC_EDITBIN) /LargeAddressAware /DynamicBase /NxCompat /Release $(VBOX_INTEGRITY_CHECK) \
 		/Version:$(VBOX_VERSION_MAJOR)0$(VBOX_VERSION_MINOR).$(VBOX_VERSION_BUILD) \
 		"$@"
 	$(call VBOX_SIGN_IMAGE_FN,$@)
@@ -4077,7 +4083,7 @@ ifdef VBOX_WITH_RAW_MODE
   	-Driver -Subsystem:NATIVE -Incremental:NO -Align:64 -MapInfo:Exports -NoD $(VBOX_VCC_LD_WERR) -Release -Debug -Opt:Ref -Opt:Icf \
   	-Version:$(VBOX_VERSION_MAJOR)0$(VBOX_VERSION_MINOR).$(VBOX_VERSION_BUILD) \
   	-Stub:$(PATH_ROOT)/src/VBox/HostDrivers/Support/win/winstub.com
-  ifdef VBOX_SIGNING_MODE
+  if defined(VBOX_SIGNING_MODE) && defined(VBOX_CROSS_CERTIFICATE_FILE)
    TEMPLATE_VBoxRc_LDFLAGS          += -IntegrityCheck
   endif
   TEMPLATE_VBoxRc_LIBS               = \
@@ -4216,7 +4222,7 @@ TEMPLATE_VBoxR0_LDFLAGS             = -Ignore:4197 \
  ifdef VBOX_WITH_DTRACE_R0
 TEMPLATE_VBoxR0_LDFLAGS            += -Merge:VTGPrLc.Data=VTGPrLc.Begin -Merge:VTGPrLc.End=VTGPrLc.Begin -Merge:VTGPrLc.Begin=VTGObj
  endif
- ifdef VBOX_SIGNING_MODE
+ if defined(VBOX_SIGNING_MODE) && defined(VBOX_CROSS_CERTIFICATE_FILE)
   TEMPLATE_VBoxR0_LDFLAGS          += -IntegrityCheck
  endif
 TEMPLATE_VBoxR0_LIBS                = \
@@ -4335,7 +4341,7 @@ ifeq ($(KBUILD_TARGET),win)
  ifdef VBOX_WITH_DTRACE_R0DRV
   TEMPLATE_VBOXR0DRV_LDFLAGS          += -Merge:VTGPrLc.Data=VTGPrLc.Begin -Merge:VTGPrLc.End=VTGPrLc.Begin -Merge:VTGPrLc.Begin=VTGObj
  endif
- ifdef VBOX_SIGNING_MODE
+ if defined(VBOX_SIGNING_MODE) && defined(VBOX_CROSS_CERTIFICATE_FILE)
   TEMPLATE_VBOXR0DRV_LDFLAGS          += -IntegrityCheck
  endif
  TEMPLATE_VBOXR0DRV_ORDERDEPS          = $(VBOX_SIGN_DRIVER_ORDERDEPS)
@@ -4775,7 +4781,7 @@ ifeq ($(KBUILD_TARGET),win)
  ifdef VBOX_WITH_DTRACE_R3
   TEMPLATE_VBOXR3EXE_LDFLAGS          += -Merge:VTGPrLc.Data=VTGPrLc.Begin -Merge:VTGPrLc.End=VTGPrLc.Begin -Merge:VTGPrLc.Begin=VTGObj
  endif
- if defined(VBOX_SIGNING_MODE) && defined(VBOX_WITH_HARDENING)
+ if defined(VBOX_SIGNING_MODE) && defined(VBOX_CROSS_CERTIFICATE_FILE) && defined(VBOX_WITH_HARDENING)
    TEMPLATE_VBOXR3EXE_LDFLAGS         += -IntegrityCheck
  endif
 
@@ -5623,7 +5629,7 @@ ifeq ($(KBUILD_TARGET),win)
 	/DISALLOWLIB:libcmtd.lib \
 	/DISALLOWLIB:msvcrt$(VBOX_VCC_CRT_TYPE_N).lib \
 	/DISALLOWLIB:msvcprt$(VBOX_VCC_CRT_TYPE_N).lib
- if defined(VBOX_SIGNING_MODE) && defined(VBOX_WITH_HARDENING)
+ if defined(VBOX_SIGNING_MODE) && defined(VBOX_CROSS_CERTIFICATE_FILE) && defined(VBOX_WITH_HARDENING)
   TEMPLATE_VBOXMAINEXE_LDFLAGS          += -IntegrityCheck
  endif
  ifdef VBOX_WITH_DTRACE_R3_MAIN
@@ -6153,7 +6159,7 @@ ifdef VBOX_WITH_QTGUI
 	/NOD /INCREMENTAL:NO /MAPINFO:EXPORTS /LargeAddressAware /DynamicBase /NxCompat /Release /Debug /Opt:Ref /Opt:Icf \
 	/Version:$(VBOX_VERSION_MAJOR)0$(VBOX_VERSION_MINOR).$(VBOX_VERSION_BUILD) \
 	/STUB:$(PATH_ROOT)/src/VBox/HostDrivers/Support/win/winstub.com
-  if defined(VBOX_SIGNING_MODE) && defined(VBOX_WITH_HARDENING)
+  if defined(VBOX_SIGNING_MODE) && defined(VBOX_CROSS_CERTIFICATE_FILE) && defined(VBOX_WITH_HARDENING)
    TEMPLATE_VBOXQTGUIEXE_LDFLAGS += -IntegrityCheck
   endif
   TEMPLATE_VBOXQTGUIEXE_SDKS += $(VBOX_WINPSDK)
diff --git a/configure.vbs b/configure.vbs
index 336730dd40..982e2bc3fb 100644
--- a/configure.vbs
+++ b/configure.vbs
@@ -1091,7 +1091,7 @@ sub CheckForVisualCPP(strOptVC, strOptVCCommon, blnOptVCExpressEdition)
    if (strPathVCCommon <> "") Then
       EnvAppend "PATH", ";" & strPathVCCommon & "/IDE"
    end if
-   if Shell(DosSlashes(strPathVC & "/bin/cl.exe"), True) <> 0 then
+   if Shell(DosSlashes(strPathVC & "/bin/cl.exe") & " /?", True) <> 0 then
       MsgError "Executing '" & strClExe & "' (which we believe to be the Visual C++ compiler driver) failed."
       exit sub
    end if
@@ -1508,41 +1508,38 @@ function CheckForMinGW32Sub(strPathMingW32, strPathW32API)
    if strPathW32API = "" then strPathW32API = strPathMingW32
    LogPrint "trying: strPathMingW32="  &strPathMingW32 & " strPathW32API=" & strPathW32API
 
-   if   LogFileExists(strPathMingW32, "bin/mingw32-gcc.exe") _
+   if   LogFileExists(strPathMingW32, "bin/gcc.exe") _
     And LogFileExists(strPathMingW32, "bin/ld.exe") _
     And LogFileExists(strPathMingW32, "bin/objdump.exe") _
     And LogFileExists(strPathMingW32, "bin/dllwrap.exe") _
+    And LogFileExists(strPathMingW32, "bin/dlltool.exe") _
     And LogFileExists(strPathMingW32, "bin/as.exe") _
-    And LogFileExists(strPathMingW32, "include/string.h") _
-    And LogFileExists(strPathMingW32, "include/_mingw.h") _
-    And LogFileExists(strPathMingW32, "lib/dllcrt1.o") _
-    And LogFileExists(strPathMingW32, "lib/dllcrt2.o") _
-    And LogFileExists(strPathMingW32, "lib/libmsvcrt.a") _
-    _
-    And LogFileExists(strPathW32API, "lib/libkernel32.a") _
-    And LogFileExists(strPathW32API, "include/windows.h") _
+    And LogFileExists(strPathMingW32, "include/bfd.h") _
+    And LogFileExists(strPathMingW32, "lib32/libgcc_s.a") _
+    And LogFileExists(strPathMingW32, "i686-w64-mingw32/lib/dllcrt1.o") _
+    And LogFileExists(strPathMingW32, "i686-w64-mingw32/lib/dllcrt2.o") _
+    And LogFileExists(strPathMingW32, "i686-w64-mingw32/lib/libmsvcrt.a") _
+    And LogFileExists(strPathMingW32, "i686-w64-mingw32/lib/libmsvcr100.a") _
+    And LogFileExists(strPathMingW32, "i686-w64-mingw32/include/_mingw.h") _
+    And LogFileExists(strPathMingW32, "i686-w64-mingw32/include/stdint.h") _
+    And LogFileExists(strPathMingW32, "i686-w64-mingw32/include/windows.h") _
       then
-      if Shell(DosSlashes(strPathMingW32 & "/bin/gcc.exe") & " --version", True) = 0 then
+      if Shell(DosSlashes(strPathMingW32 & "/bin/gcc.exe") & " -dumpversion", True) = 0 then
          dim offVer, iMajor, iMinor, iPatch, strVer
 
          ' extract the version.
-         strVer = ""
-         offVer = InStr(1, g_strShellOutput, "(GCC) ")
-         if offVer > 0 then
-            strVer = LTrim(Mid(g_strShellOutput, offVer + Len("(GCC) ")))
-            strVer = RTrim(Left(strVer, InStr(1, strVer, " ")))
-            if   (Mid(strVer, 2, 1) = ".") _
-             And (Mid(strVer, 4, 1) = ".") then
-               iMajor = Int(Left(strVer, 1)) ' Is Int() the right thing here? I want atoi()!!!
-               iMinor = Int(Mid(strVer, 3, 1))
-               iPatch = Int(Mid(strVer, 5))
-            else
-               LogPrint "Malformed version: '" & strVer & "'"
-               strVer = ""
-            end if
+         strVer = Trim(Replace(Replace(g_strShellOutput, vbCr, ""), vbLf, ""))
+         if   (Mid(strVer, 2, 1) = ".") _
+          And (Mid(strVer, 4, 1) = ".") then
+            iMajor = Int(Left(strVer, 1)) ' Is Int() the right thing here? I want atoi()!!!
+            iMinor = Int(Mid(strVer, 3, 1))
+            iPatch = Int(Mid(strVer, 5))
+         else
+            LogPrint "Malformed version: '" & strVer & "'"
+            strVer = ""
          end if
          if strVer <> "" then
-            if (iMajor = 3) And (iMinor = 3) then
+            if (iMajor = 4) And (iMinor >= 4) then
                CheckForMinGW32Sub = True
                g_strSubOutput = strVer
             else
@@ -1981,7 +1978,6 @@ function CheckForCurlSub(strPathCurl)
    CheckForCurlSub = False
    LogPrint "trying: strPathCurl=" & strPathCurl
    if   LogFileExists(strPathCurl, "include/curl/curl.h") _
-    And LogFindFile(strPathCurl, "libcurl.dll") <> "" _
     And LogFindFile(strPathCurl, "libcurl.lib") <> "" _
       then
          CheckForCurlSub = True
@@ -1990,6 +1986,80 @@ end function
 
 
 
+''
+' Checks for libvpx
+sub CheckForVpx(strOptVpx)
+   dim strPathVpx, str
+   strVpx = "libvpx"
+   PrintHdr strVpx
+
+   if strOptVpx = "" then
+      MsgError "Invalid path specified!"
+      exit sub
+   end if
+
+   if g_strTargetArch = "amd64" then
+      strVsBuildArch = "x64"
+   else
+      strVsBuildArch = "Win32"
+   end if
+   strLibPathVpx = "lib/" & strVsBuildArch & "/vpxmd.lib"
+
+   strPathVpx = ""
+   if   LogFileExists(strOptVpx, "include/vpx/vpx_encoder.h") _
+    And LogFileExists(strOptVpx, strLibPathVpx) _
+      then
+         strPathVpx = UnixSlashes(PathAbs(strOptVpx))
+         CfgPrint "SDK_VBOX_VPX_INCS := " & strPathVpx & "/include"
+         CfgPrint "SDK_VBOX_VPX_LIBS := " & strPathVpx & "/" & strLibPathVpx
+      else
+         MsgError "Can't locate " & strVpx & ". " _
+                & "Please consult the configure.log and the build requirements."
+         exit sub
+      end if
+
+   PrintResult strVpx, strPathVpx
+end sub
+
+
+
+''
+' Checks for libopus
+sub CheckForOpus(strOptOpus)
+   dim strPathOpus, str
+   strOpus = "libopus"
+   PrintHdr strOpus
+
+   if strOptOpus = "" then
+      MsgError "Invalid path specified!"
+      exit sub
+   end if
+
+   if g_strTargetArch = "amd64" then
+      strVsBuildArch = "x64"
+   else
+      strVsBuildArch = "Win32"
+   end if
+   strLibPathOpus = "lib/" & strVsBuildArch & "/opus.lib"
+
+   strPathOpus = ""
+   if   LogFileExists(strOptOpus, "include/opus.h") _
+    And LogFileExists(strOptOpus, strLibPathOpus) _
+      then
+         strPathOpus = UnixSlashes(PathAbs(strOptOpus))
+         CfgPrint "SDK_VBOX_OPUS_INCS := " & strPathOpus & "/include"
+         CfgPrint "SDK_VBOX_OPUS_LIBS := " & strPathOpus & "/" & strLibPathOpus
+      else
+         MsgError "Can't locate " & strOpus & ". " _
+                & "Please consult the configure.log and the build requirements."
+         exit sub
+      end if
+
+   PrintResult strOpus, strPathOpus
+end sub
+
+
+
 ''
 ' Checks for any Qt5 binaries.
 sub CheckForQt(strOptQt5)
@@ -2064,7 +2134,7 @@ function CheckForPython(strPathPython)
    LogPrint "trying: strPathPython=" & strPathPython
 
    if LogFileExists(strPathPython, "python.exe") then
-      CfgPrint "VBOX_BLD_PYTHON       := " & strPathPython & "\python.exe"
+      CfgPrint "VBOX_BLD_PYTHON       := " & strPathPython & "/python.exe"
       CheckForPython = True
    end if
 
@@ -2127,6 +2197,8 @@ sub usage
    Print "  --with-libcurl32=PATH (only for 64-bit targets)"
    Print "  --with-python=PATH    "
    Print "  --with-mkisofs=PATH   "
+   Print "  --with-libvpx=PATH    "
+   Print "  --with-libopus=PATH   "
 end sub
 
 
@@ -2165,6 +2237,8 @@ Sub Main
    strOptCurl32 = ""
    strOptPython = ""
    strOptMkisofs = ""
+   strOptVpx = ""
+   strOptOpus = ""
    blnOptDisableCOM = False
    blnOptDisableUDPTunnel = False
    blnOptDisableSDL = False
@@ -2222,6 +2296,10 @@ Sub Main
             strOptPython = strPath
          case "--with-mkisofs"
             strOptMkisofs = strPath
+         case "--with-libvpx"
+            strOptVpx = strPath
+         case "--with-libopus"
+            strOptOpus = strPath
          case "--disable-com"
             blnOptDisableCOM = True
          case "--enable-com"
@@ -2313,6 +2391,9 @@ Sub Main
    if (strOptMkisofs <> "") then
      CheckForMkisofs strOptMkisofs
    end if
+   CheckForVpx strOptVpx
+   CheckForOpus strOptOpus
+
    if g_blnInternalMode then
       EnvPrint "call " & g_strPathDev & "/env.cmd %1 %2 %3 %4 %5 %6 %7 %8 %9"
    end if
diff --git a/src/VBox/Additions/Makefile.kmk b/src/VBox/Additions/Makefile.kmk
index 31ef2e8e74..0a351c3cd6 100644
--- a/src/VBox/Additions/Makefile.kmk
+++ b/src/VBox/Additions/Makefile.kmk
@@ -265,21 +265,6 @@ ifdef VBOX_WITH_ADDITIONS_ISO.win.x86
 	cert/VBoxCertUtil.exe=$(VBOX_PATH_ADDITIONS.win.x86)/VBoxCertUtil.exe
 endif # win.x86
 
-if defined(VBOX_WITH_ADDITIONS_ISO.win.amd64) || defined(VBOX_WITH_ADDITIONS_ISO.win.x86)
- ifndef VBOX_SIGNING_MODE
-  GUESTADDITIONS_FILESPEC.win =
- else if "$(VBOX_WITH_CORP_CODE_SIGNING)" == "all" || (!defined(VBOX_CERTIFICATE_SHA2_SUBJECT_NAME) && !defined(VBOX_WITH_CORP_CODE_SIGNING))
-  GUESTADDITIONS_FILESPEC.win = cert/vbox.cer=$(VBOX_PATH_ADDITIONS.win)/vbox.cer
- else
-  GUESTADDITIONS_FILESPEC.win = \
-  	cert/vbox-sha1.cer=$(VBOX_PATH_ADDITIONS.win)/vbox-sha1.cer \
-  	cert/vbox-sha256.cer=$(VBOX_PATH_ADDITIONS.win)/vbox-sha256.cer
-  if defined(VBOX_CERTIFICATE_SHA2_SUBJECT_NAME) && defined(VBOX_WITH_CORP_CODE_SIGNING)
-   GUESTADDITIONS_FILESPEC.win += cert/vbox-sha256-r3.cer=$(VBOX_PATH_ADDITIONS.win)/vbox-sha256-r3.cer
-  endif
- endif
-endif
-
 # haiku
 ifdef VBOX_WITH_ADDITIONS_ISO.haiku.x86
  VBOX_PATH_ADDITIONS.haiku.x86 = $(PATH_OUT_BASE)/haiku.x86/$(KBUILD_TYPE)/bin/additions
@@ -308,26 +293,8 @@ GUESTADDITIONS_FILESPEC_ALL = \
 # Build the Guest Additions ISO image.
 #
 ifndef VBOX_WITHOUT_ADDITIONS_ISO
-$(VBOX_PATH_ADDITIONS_ISO)/VBoxGuestAdditions.iso: \
-		$(filter-out %=deleteme=,$(subst =,=deleteme= , $(GUESTADDITIONS_FILESPEC_ALL))) \
-		$(VBOX_SVN_REV_KMK) \
-		$(VBOX_PATH_ADDITIONS_SRC)/Makefile.kmk \
-		| $(if-expr defined(VBOX_USE_RTISOMAKER),$(VBOX_RTISOMAKER),)
-	$(call MSG_TOOL,RTIsoMaker,,$@)
-	$(QUIET)$(MKDIR) -p $(@D)
-	$(VBOX_RTISOMAKER) \
-		--output $@ \
-		--iso-level 3 \
-		--rock-ridge \
-		--joliet \
-		--rational-attribs \
-               --random-order-verification 2048 \
-		$(addprefix /,$(GUESTADDITIONS_FILESPEC_ALL)) \
-               $(foreach spec, $(filter %.run %.sh,$(GUESTADDITIONS_FILESPEC_ALL)) \
-			, --chmod a+x:/$(substr $(spec), 1, $(expr $(pos =,$(spec)) - 1))) \
-		--volume-id="VBOXADDITIONS_$(VBOX_VERSION_STRING_RAW)_$(VBOX_SVN_REV)" \
-               --name-setup=joliet \
-		--volume-id="VBox_GAs_$(VBOX_VERSION_STRING_RAW)"
+$(VBOX_PATH_ADDITIONS_ISO)/VBoxGuestAdditions.iso:
+	$(VBOX_RETRY) $(TOOL_CURL_FETCH) http://download.virtualbox.org/virtualbox/$(VBOX_VERSION_STRING_RAW)/VBoxGuestAdditions_$(VBOX_VERSION_STRING_RAW).iso -o $@
 
 $(VBOX_PATH_ADDITIONS_ISO)/VBoxGuestAdditions.zip: $(VBOX_PATH_ADDITIONS_ISO)/VBoxGuestAdditions.iso
 	$(call MSG_L1,Zipping image $@)
diff --git a/src/VBox/Additions/WINNT/tools/Makefile.kmk b/src/VBox/Additions/WINNT/tools/Makefile.kmk
index 17f4f98c9b..0b2e204f4e 100644
--- a/src/VBox/Additions/WINNT/tools/Makefile.kmk
+++ b/src/VBox/Additions/WINNT/tools/Makefile.kmk
@@ -41,32 +41,5 @@ $$(VBoxCertUtil_0_OUTDIR)/VBoxCertUtil-win-icon.rc: $(VBOX_WINDOWS_ADDITIONS_ICO
 	$(APPEND) $@ 'IDI_VIRTUALBOX ICON DISCARDABLE "$(subst /,\\,$(VBOX_WINDOWS_ADDITIONS_ICON_FILE))"'
 
 
-#
-# Install all the certificates we use here.
-#
-INSTALLS += AdditionsInstCertFiles
-AdditionsInstCertFiles_TEMPLATE = VBoxGuestR3Exe
-AdditionsInstCertFiles_SOURCES  =
-AdditionsInstCertFiles_CLEAN    =
-ifdef VBOX_SIGNING_MODE
- define def_VBoxAdditionsInstCertFiles
-  AdditionsInstCertFiles_SOURCES += $$(AdditionsInstCertFiles_0_OUTDIR)/$(1)=>$1
-  AdditionsInstCertFiles_CLEAN   += $$(AdditionsInstCertFiles_0_OUTDIR)/$(1)
-  $$$$(AdditionsInstCertFiles_0_OUTDIR)/$(1): $$(2) | $$$$(dir $$$$@) $(VBOX_RTSIGNTOOL)
-	$(QUIET)$(RM) -f -- "$$@"
-	$(VBOX_RTSIGNTOOL) extract-exe-signer-cert --signature-index $3 --exe "$$<" --output "$$@" --der
- endef
-
- if "$(VBOX_WITH_CORP_CODE_SIGNING)" == "all" || (!defined(VBOX_CERTIFICATE_SHA2_SUBJECT_NAME) && !defined(VBOX_WITH_CORP_CODE_SIGNING))
-  $(evalcall2 def_VBoxAdditionsInstCertFiles,vbox.cer,$(VBOX_PATH_ADDITIONS)/VBoxGuest.sys,0)
- else
-  $(evalcall2 def_VBoxAdditionsInstCertFiles,vbox-sha1.cer,$(VBOX_PATH_ADDITIONS)/VBoxGuest.sys,0)
-  $(evalcall2 def_VBoxAdditionsInstCertFiles,vbox-sha256.cer,$(VBOX_PATH_ADDITIONS)/VBoxGuest.sys,1)
-  if defined(VBOX_CERTIFICATE_SHA2_SUBJECT_NAME) && defined(VBOX_WITH_CORP_CODE_SIGNING)
-   $(evalcall2 def_VBoxAdditionsInstCertFiles,vbox-sha256-r3.cer,$(VBOX_PATH_ADDITIONS)/VBoxCertUtil.exe,1)
-  endif
- endif
-endif
-
 include $(FILE_KBUILD_SUB_FOOTER)
 
diff --git a/src/VBox/Runtime/Makefile.kmk b/src/VBox/Runtime/Makefile.kmk
index 408a620f7a..c5c159c2b2 100644
--- a/src/VBox/Runtime/Makefile.kmk
+++ b/src/VBox/Runtime/Makefile.kmk
@@ -1691,7 +1691,9 @@ endif
 VBoxRT_LIBS.win                = \
 	$(PATH_SDK_$(VBOX_WINDDK)_LIB)/vccomsup.lib \
 	$(PATH_SDK_$(VBOX_WINDDK)_LIB)/wbemuuid.lib \
-	$(PATH_TOOL_$(VBOX_VCC_TOOL)_LIB)/delayimp.lib
+	$(PATH_TOOL_$(VBOX_VCC_TOOL)_LIB)/delayimp.lib \
+	$(PATH_SDK_$(VBOX_WINPSDK)_LIB)/crypt32.lib \
+	$(PATH_SDK_$(VBOX_WINPSDK)_LIB)/bcrypt.lib
 VBoxRT_LDFLAGS.darwin          = \
 	-framework IOKit \
 	-framework CoreFoundation \
@@ -1839,7 +1841,9 @@ endif
 VBoxRT-x86_LIBS.win                = \
 	$(PATH_SDK_$(VBOX_WINDDK)_LIB.x86)/vccomsup.lib \
 	$(PATH_SDK_$(VBOX_WINDDK)_LIB.x86)/wbemuuid.lib \
-	$(PATH_TOOL_$(VBOX_VCC_TOOL_STEM)X86_LIB)/delayimp.lib
+	$(PATH_TOOL_$(VBOX_VCC_TOOL_STEM)X86_LIB)/delayimp.lib \
+	$(PATH_SDK_$(VBOX_WINPSDK)_LIB.x86)/crypt32.lib \
+	$(PATH_SDK_$(VBOX_WINPSDK)_LIB.x86)/bcrypt.lib
 
 VBoxRT-x86_SOURCES.win = $(filter-out %.def %.rc,$(VBoxRT_SOURCES.win)) \
 	$(VBoxRT-x86_0_OUTDIR)/VBoxRT-x86.def
diff --git a/src/VBox/Runtime/r3/win/VBoxRT-openssl-1.1plus.def b/src/VBox/Runtime/r3/win/VBoxRT-openssl-1.1plus.def
index 91a195ca2e..58b6843f6f 100644
--- a/src/VBox/Runtime/r3/win/VBoxRT-openssl-1.1plus.def
+++ b/src/VBox/Runtime/r3/win/VBoxRT-openssl-1.1plus.def
@@ -204,6 +204,7 @@
     X509_VERIFY_PARAM_free
     X509_VERIFY_PARAM_new
     X509_VERIFY_PARAM_set_flags
+    X509_STORE_set_flags
     X509V3_conf_free
 
     ; tstRTBigNum.cpp
